@using SCNRWeb.Helper;
@model SCNRWeb.Models.CMS.HomeViewModel
@{
    ViewData["Title"] = "Watch and Read Latest News and More";
}

@await Html.PartialAsync("Trending")
<div class="mantle-holder t-pad:15px:lt:xl featured t-pad:25pc:bot bg:pattern">
    @if (Model.LiveVideo != null)
    {
        @await Html.PartialAsync("LiveVideo", Model.LiveVideo)
    }
    <div class="mantle-grid t-marg:75pc:bot  t-pad:0px:rt:sw t-pad:0px:lt:sw t-pad:20px:rt:l t-pad:15px:lt:l t-pad:15px:lt:m  t-pad:0px:lt:xs t-contain t-pos:cntr t-txt:wht" style="margin-top: 15px">
        <div class="clmn clmn1 t-pad:33pc:lt t-pad:33pc:rt t-show:under:m">
            <h2 class="header t-marg:25pc:bot t-txt:cntr t-txt:wht">Featured</h2>
            <div class="article">
                <div class="article ">
                    <div class="article-block  video">
                        <a href="@cUrl.GeneratePartialContentUrl(Model?.FeaturedItem)" class="image">
                            <img src="@cUrl.GeneratePartialImageUrl(Model?.FeaturedItem)" alt="@Model?.FeaturedItem?.Title" />
                        </a>
                        <div class="baloon baloon-video">
                        </div>
                        <div class="meta t-pad:15px:top t-pad:50pc:bot">
                            <a href="@cUrl.GeneratePartialContentUrl(Model?.FeaturedItem)">
                                <div class="summary">
                                    <div class="t-txt:big t-txt:grey1 t-fnt:1 t-pad:5px:top t-pad:5px:bot">
                                        @Model?.FeaturedItem?.PublishOnUTC.ToDateTime().FromUTCToEastern().ToString("MM.d.yy")
                                    </div>
                                    <h2 class=" t-txt:grey3 t-txt:h4">@Model?.FeaturedItem?.Title</h2>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="t-txt:cntr:xs t-txt:cntr:s">
                    <a href="@cUrl.GeneratePartialContentUrl(Model?.FeaturedItem)" class="button:rev ">More</a>
                </div>
            </div>
        </div>

        <div class="clmn clmn2 t-pad:top:xs t-marg:top:xs  t-pad:25pc:lt:m t-pad:33pc:lt:xs t-pad:33pc:rt t-fnt:smooth members  t-pad:15px:lt:l t-pad:15px:lt:xl ">
            <h2 class="header t-marg:25pc:bot t-txt:cntr t-txt:wht">Latest Videos</h2>
            @foreach (var item in Model.Videos.Take(2))
            {
                @await Html.PartialAsync("NormalVideoLink", item)
            }
            <div class="t-txt:cntr:xs t-txt:cntr:s"><a href="/video/" class="button:rev">View All</a></div>
        </div>
        <div class="clmn clmn1 t-pad:33pc:lt t-pad:33pc:rt t-hide:under:m">
            <h2 class="header t-marg:25pc:bot t-txt:cntr t-txt:wht">Featured</h2>
            <div class="article">
                <div class="article ">
                    <div class="article-block  video">
                        <a href="@cUrl.GeneratePartialContentUrl(Model?.FeaturedItem)" class="image">
                            <img src="@cUrl.GeneratePartialImageUrl(Model?.FeaturedItem)" alt="@Model.FeaturedItem?.Title" />
                        </a>
                        <div class="baloon baloon-video">
                        </div>
                        <div class="meta t-pad:15px:top t-pad:50pc:bot">
                            <a href="@cUrl.GeneratePartialContentUrl(Model?.FeaturedItem)">
                                <div class="summary">
                                    <div class="t-txt:big t-txt:grey1 t-fnt:1 t-pad:5px:top t-pad:5px:bot">
                                        @Model.FeaturedItem?.PublishOnUTC.ToDateTime().FromUTCToEastern().ToString("MM.d.yy")
                                    </div>
                                    <h2 class=" t-txt:grey3 t-txt:h4">@Model.FeaturedItem?.Title</h2>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="t-txt:cntr:xs t-txt:cntr:s">
                    <a href="@cUrl.GeneratePartialContentUrl(Model?.FeaturedItem)" class="button:rev ">More</a>
                </div>
            </div>

        </div>


        <div class="clmn clmn3 t-pad:33pc:rt:xs t-pad:15px:rt t-pad:top:xs t-marg:top:xs t-pad:33pc:lt t-pad:25pc:rt:m">
            <h2 class="header t-marg:25pc:bot t-txt:cntr t-txt:wht">Latest News</h2>
            @foreach (var item in Model.News.Take(4))
            {
                @await Html.PartialAsync("LatestNewsLink", item)
            }
            <span class="clear"></span>
            <div class="t-txt:cntr:xs t-txt:cntr:s"><a href="/news/" class="button:rev t-marg:25pc:top">View All</a></div>
            <br />
            <div style="width:300px;height:250px;">
                <script id="nrp-53" type="text/javascript" class="" style="">
                    (function (node) {
                        var nrp = document.createElement("script");
                        nrp.type = "text/javascript", nrp.async = true, nrp.src = "//a.ads.rmbl.ws/warp/53?r=" + Math.floor(Math.random() * 99999) + "";
                        node.appendChild(nrp);
                    })(document.getElementsByTagName("script")[document.getElementsByTagName("script").length - 1].parentNode)
                </script>
            </div>
        </div>
    </div>
</div>




<div class="clmn clmn1 t-show:under:m">
</div>

<div class="t-pad:15px:rt t-pad:0px:rt:xs t-pad:0px:lt:xs  t-pad:15px:lt  t-pad:33pc:lt:xs t-pad:33pc:rt:xs bg:pattern:rev t-txt:wht t-pad:top:l t-pad:50pc:top">
    <div class="t-txt:cntr t-contain t-pos:cntr">
        <div class="banner-ad non-member t-pad:50pc:bot t-pad:bot:l">
        </div>
    </div>
    <div class="columns t-contain t-pos:cntr t-pad:15px:rt:xs t-pad:15px:lt:xs">
        <div class="t-grid:l:60pc t-marg:50pc:bot">
            <div class="pretty-header" data-size="full"><h3>More News</h3></div>
        </div>
    </div>
    <div class="article-links t-contain t-pos:cntr ">
        <div class="t-grid:s:fit:2 t-grid:l:fit:4">
            @foreach (var item in Model.News.Where(r => r.ContentType == ON.Fragments.Content.ContentType.Written).Skip(4).Take(8))
            {
                @await Html.PartialAsync("BottomBlockNewsLink", item)
            }
        </div>
        <div class="t-txt:cntr t-pad:25pc:top  t-pad:50pc:bot  t-pad:bot:m t-pad:bot:l">
            <div class="t-txt:cntr:xs t-txt:cntr:s"> <a href="/news/" class="button">View All</a></div>
        </div>
    </div>
    <div class="t-txt:cntr t-contain t-pos:cntr">
        <div class="banner-ad non-member t-pad:50pc:bot t-pad:50pc:bot:m t-pad:bot:l">
        </div>
    </div>
</div>



@section head {
    <meta property="og:locale" content="en_US" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="Watch and Read Latest News and More" />
    <meta property="og:description" content="SCNR is a community-owned news network by Subverse Inc. focused on investigative reporting, on-the-ground journalism and the free press. We produce a wide-spectrum of shows, podcasts, writing and documentaries on groundbreaking issues from diverse viewpoints." />
    <meta property="og:url" content="https://scnr.com/" />
    <meta property="og:site_name" content="SCNR" />
    <meta property="og:image" content="https://scnr.com/img/scnr-header.png" />

    <style>
        .blink_text {
            animation: 1s blinker linear infinite;
            -webkit-animation: 1s blinker linear infinite;
            -moz-animation: 1s blinker linear infinite;
            color: red;
        }

        \@@-moz-keyframes blinker {
            0% {
                opacity: 0.7;
            }

            45% {
                opacity: 0.9;
            }

            50% {
                opacity: 0.0;
            }

            95% {
                opacity: 0.0;
            }

            100% {
                opacity: 0.7;
            }
        }

        \@@-webkit-keyframes blinker {
            0% {
                opacity: 0.7;
            }

            45% {
                opacity: 0.9;
            }

            50% {
                opacity: 0.0;
            }

            95% {
                opacity: 0.0;
            }

            100% {
                opacity: 0.7;
            }
        }

        @@keyframes blinker {
            0% {
                opacity: 0.7;
            }

            45% {
                opacity: 0.9;
            }

            50% {
                opacity: 0.0;
            }

            95% {
                opacity: 0.0;
            }

            100% {
                opacity: 0.7;
            }
        }
    </style>
}